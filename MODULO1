NOTAS.-
///////////////////////////HOLA MUNDO 8.- /////////////////////

HotReload = Renderizacion Manteniendo el estado.

///////////////////////TIPOS DE DATOS 9.- ////////////////////


void main() {
  
  //NUMEROS
  int empleados = 10;
  double pi = 3.1415;
  var numero = 1.0;
  
  print('$empleados - $pi -$numero');
    
    //STRINGS
  String nombre = 'Tony';//0-3
  print(nombre);
  print(nombre[0]);
  print(nombre[nombre.length-1]);//length= 4-1=3 =tony de 0 a 3 print Y
   
}

/////////////////Booleanos y Condiciones 10.- //////////////////

void main() {
  
  bool activado = true;
  
  print(activado);
  
  if(!activado){ //activado= false
    print('El motor esta funcionando');
  }else{
    print('el motor esta apagado'); //print false case
  }
  
  
}



/////////////////Tipo de Dato Lista 11.- //////////////////



void main() {
  
  //Una estructura de datos din치mica es aquella en la que el tama침o ocupado en memoria puede modificarse durante la ejecuci칩n del programa
  
//LISTA: Coleccion de objetos que tienen algo en comun
  
  List<int> numeros = [1,2,3,4,5];
  print(numeros);
  
  numeros.add(6);
  print(numeros);
  
  // Tama침o fijo
  List masNumeros = List(10);
  print(masNumeros);
  masNumeros.add(1);// Esto no se puede hacer por eso marca Script error
  print(masNumeros);
}

/////////////////Tipo de Dato Map 12.- //////////////////


void main() {
  
  //MAPs son pares de valores el primer valor es la llave y el segundo es el valor, 
  
  String propiedad = 'soltero'; 
  
  Map<String, dynamic> persona ={
    'nombre':'Carlos',
    'edad':'32',
    'soltero': true
  };
  
  Map<int, String> personas ={
    1: 'Tony',
    2: 'Peter',
    3: 'Strange'
  };
  
  personas.addAll({4:'Banner'});
    
  print(personas);
  print(personas[2]); //imprime peter porque apunta a la llave 2
}

/////////////////Funciones en DART 13.- //////////////////
void main() {

  String mensaje = saludar2(nombre: 'Fernando', texto:'Hola, ');
  print(mensaje);
}

String saludar({String texto,String nombre}){
  //void se aplico para aclarar a dart que no regrersa nada que pueda ser almacenado en variables y controlar mejor el flujo.
  //print('Hola');
  return '$texto $nombre';
}

//misma funcion usando la funcion de flecha
String saludar2({String texto,String nombre})=>'$texto $nombre';


/////////////////Clases en DART 14.- //////////////////

void main() {

  //new es opcional para definir una nueva instancia
  //final es para decir que esa variable va a cambiar de su valor como tal
 
  /*
   //final exampple
   
 final wolverine = new Heroe();
 wolverine= new Heroe(); //esto no puede ser
 
 */
  
  //LA DIFERENCIA ENTRE EL METODO Y UNA FUNCION
  //EL METODO SE ENCUENTRA DENTRO DE UNA CLASE
  //FUNCION LA QUE SE ENCUENTRA FUERA DE UNA CLASE
  
  final wolverine = new Heroe(poder:'Regeneracion'); // se lanza al constructor, el constructor lo procesa y obtienes el objeto nombreDeclase.propiedad

  print(wolverine.poder);
   print(wolverine.nombre);
  print(wolverine);
  
  
  
}

class Heroe{
  
  String nombre;
  String poder;
  
  //el constructor tiene el mismo nombre de la clase //el sinnombre es para el default
  Heroe({String nombre='sin nombre', String poder}){ //lo que recibe el constructor
    this.nombre= nombre;
    this.poder= poder;
  }
    
   String toString(){ //asignacion tostring al metodo 
     
     return 'nombre: ${this.nombre} - poder: ${this.poder}'; //retorna variable nombre y poder
     
   }
  
}


